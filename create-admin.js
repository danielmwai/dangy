import { hash } from 'bcryptjs';
import dotenv from 'dotenv';

dotenv.config();

// Simple script to create an admin user directly in the database
async function createAdminUser() {
  try {
    const { Client } = await import('pg');
    
    const client = new Client({
      connectionString: process.env.DATABASE_URL
    });
    
    await client.connect();
    
    // Hash the password
    const password = await hash('password123', 10);
    
    // Insert admin user with PayloadCMS schema fields
    const insertQuery = `
      INSERT INTO users (
        first_name, 
        last_name, 
        email, 
        password, 
        hash, 
        salt, 
        auth_provider, 
        email_verified, 
        role
      ) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9)
      ON CONFLICT (email) DO NOTHING
      RETURNING id;
    `;
    
    const result = await client.query(insertQuery, [
      'Admin',      // first_name
      'User',       // last_name  
      'admin@example.com', // email
      null,         // password (not used by PayloadCMS?)
      password,     // hash (the bcrypt hash)
      null,         // salt (may be auto-generated by PayloadCMS)
      'email',      // auth_provider
      true,         // email_verified
      'admin'       // role
    ]);
    
    if (result.rows.length > 0) {
      console.log('Admin user created successfully!');
      console.log('Email: admin@example.com');
      console.log('Password: password123');
    } else {
      console.log('Admin user may already exist.');
    }
    
    await client.end();
  } catch (error) {
    console.error('Error creating admin user:', error.message);
  }
}

createAdminUser();