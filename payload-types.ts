/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    pages: Page;
    products: Product;
    'product-categories': ProductCategory;
    'fitness-classes': FitnessClass;
    'class-schedules': ClassSchedule;
    'membership-plans': MembershipPlan;
    testimonials: Testimonial;
    memberships: Membership;
    orders: Order;
    'order-items': OrderItem;
    payments: Payment;
    'newsletter-subscriptions': NewsletterSubscription;
    'contact-submissions': ContactSubmission;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    products: ProductsSelect<false> | ProductsSelect<true>;
    'product-categories': ProductCategoriesSelect<false> | ProductCategoriesSelect<true>;
    'fitness-classes': FitnessClassesSelect<false> | FitnessClassesSelect<true>;
    'class-schedules': ClassSchedulesSelect<false> | ClassSchedulesSelect<true>;
    'membership-plans': MembershipPlansSelect<false> | MembershipPlansSelect<true>;
    testimonials: TestimonialsSelect<false> | TestimonialsSelect<true>;
    memberships: MembershipsSelect<false> | MembershipsSelect<true>;
    orders: OrdersSelect<false> | OrdersSelect<true>;
    'order-items': OrderItemsSelect<false> | OrderItemsSelect<true>;
    payments: PaymentsSelect<false> | PaymentsSelect<true>;
    'newsletter-subscriptions': NewsletterSubscriptionsSelect<false> | NewsletterSubscriptionsSelect<true>;
    'contact-submissions': ContactSubmissionsSelect<false> | ContactSubmissionsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  first_name: string;
  last_name: string;
  profile_image_url?: string | null;
  auth_provider?: ('replit' | 'email') | null;
  email_verified?: boolean | null;
  role?: ('user' | 'admin') | null;
  created_at?: string | null;
  updated_at?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  slug: string;
  title: string;
  content:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  meta_description?: string | null;
  published?: boolean | null;
  created_at?: string | null;
  updated_at?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: number;
  name: string;
  description: string;
  price: number;
  category_id?: (number | null) | ProductCategory;
  image_url?: string | null;
  stock?: number | null;
  featured?: boolean | null;
  active?: boolean | null;
  created_at?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "product-categories".
 */
export interface ProductCategory {
  id: number;
  name: string;
  description?: string | null;
  image_url?: string | null;
  active?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "fitness-classes".
 */
export interface FitnessClass {
  id: number;
  name: string;
  description: string;
  duration: number;
  level: 'beginner' | 'intermediate' | 'advanced';
  instructor?: string | null;
  max_capacity?: number | null;
  image_url?: string | null;
  active?: boolean | null;
  created_at?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "class-schedules".
 */
export interface ClassSchedule {
  id: number;
  class_id: number | FitnessClass;
  day_of_week: number;
  start_time: string;
  end_time: string;
  created_at?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "membership-plans".
 */
export interface MembershipPlan {
  id: number;
  name: string;
  description: string;
  price: number;
  duration: number;
  features?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  popular?: boolean | null;
  active?: boolean | null;
  created_at?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "testimonials".
 */
export interface Testimonial {
  id: number;
  name: string;
  username?: string | null;
  text: string;
  rating?: number | null;
  image_url?: string | null;
  featured?: boolean | null;
  created_at?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "memberships".
 */
export interface Membership {
  id: number;
  user_id: number | User;
  plan_id: number | MembershipPlan;
  start_date: string;
  end_date: string;
  status: 'active' | 'expired' | 'cancelled';
  created_at?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders".
 */
export interface Order {
  id: number;
  user_id: number | User;
  total: number;
  status: 'pending' | 'paid' | 'shipped' | 'delivered' | 'cancelled';
  shipping_address?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  created_at?: string | null;
  updated_at?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "order-items".
 */
export interface OrderItem {
  id: number;
  order_id: number | Order;
  product_id: number | Product;
  quantity: number;
  price: number;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payments".
 */
export interface Payment {
  id: number;
  order_id?: (number | null) | Order;
  membership_id?: (number | null) | Membership;
  amount: number;
  currency?: string | null;
  method: 'mpesa' | 'card' | 'cash';
  status: 'pending' | 'completed' | 'failed' | 'refunded';
  transaction_id?: string | null;
  phone_number?: string | null;
  mpesa_data?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  created_at?: string | null;
  updated_at?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "newsletter-subscriptions".
 */
export interface NewsletterSubscription {
  id: number;
  email: string;
  active?: boolean | null;
  created_at?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact-submissions".
 */
export interface ContactSubmission {
  id: number;
  name: string;
  email: string;
  phone?: string | null;
  message: string;
  status?: ('new' | 'responded' | 'closed') | null;
  created_at?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'products';
        value: number | Product;
      } | null)
    | ({
        relationTo: 'product-categories';
        value: number | ProductCategory;
      } | null)
    | ({
        relationTo: 'fitness-classes';
        value: number | FitnessClass;
      } | null)
    | ({
        relationTo: 'class-schedules';
        value: number | ClassSchedule;
      } | null)
    | ({
        relationTo: 'membership-plans';
        value: number | MembershipPlan;
      } | null)
    | ({
        relationTo: 'testimonials';
        value: number | Testimonial;
      } | null)
    | ({
        relationTo: 'memberships';
        value: number | Membership;
      } | null)
    | ({
        relationTo: 'orders';
        value: number | Order;
      } | null)
    | ({
        relationTo: 'order-items';
        value: number | OrderItem;
      } | null)
    | ({
        relationTo: 'payments';
        value: number | Payment;
      } | null)
    | ({
        relationTo: 'newsletter-subscriptions';
        value: number | NewsletterSubscription;
      } | null)
    | ({
        relationTo: 'contact-submissions';
        value: number | ContactSubmission;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  first_name?: T;
  last_name?: T;
  profile_image_url?: T;
  auth_provider?: T;
  email_verified?: T;
  role?: T;
  created_at?: T;
  updated_at?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  slug?: T;
  title?: T;
  content?: T;
  meta_description?: T;
  published?: T;
  created_at?: T;
  updated_at?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products_select".
 */
export interface ProductsSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  price?: T;
  category_id?: T;
  image_url?: T;
  stock?: T;
  featured?: T;
  active?: T;
  created_at?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "product-categories_select".
 */
export interface ProductCategoriesSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  image_url?: T;
  active?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "fitness-classes_select".
 */
export interface FitnessClassesSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  duration?: T;
  level?: T;
  instructor?: T;
  max_capacity?: T;
  image_url?: T;
  active?: T;
  created_at?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "class-schedules_select".
 */
export interface ClassSchedulesSelect<T extends boolean = true> {
  class_id?: T;
  day_of_week?: T;
  start_time?: T;
  end_time?: T;
  created_at?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "membership-plans_select".
 */
export interface MembershipPlansSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  price?: T;
  duration?: T;
  features?: T;
  popular?: T;
  active?: T;
  created_at?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "testimonials_select".
 */
export interface TestimonialsSelect<T extends boolean = true> {
  name?: T;
  username?: T;
  text?: T;
  rating?: T;
  image_url?: T;
  featured?: T;
  created_at?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "memberships_select".
 */
export interface MembershipsSelect<T extends boolean = true> {
  user_id?: T;
  plan_id?: T;
  start_date?: T;
  end_date?: T;
  status?: T;
  created_at?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders_select".
 */
export interface OrdersSelect<T extends boolean = true> {
  user_id?: T;
  total?: T;
  status?: T;
  shipping_address?: T;
  created_at?: T;
  updated_at?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "order-items_select".
 */
export interface OrderItemsSelect<T extends boolean = true> {
  order_id?: T;
  product_id?: T;
  quantity?: T;
  price?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payments_select".
 */
export interface PaymentsSelect<T extends boolean = true> {
  order_id?: T;
  membership_id?: T;
  amount?: T;
  currency?: T;
  method?: T;
  status?: T;
  transaction_id?: T;
  phone_number?: T;
  mpesa_data?: T;
  created_at?: T;
  updated_at?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "newsletter-subscriptions_select".
 */
export interface NewsletterSubscriptionsSelect<T extends boolean = true> {
  email?: T;
  active?: T;
  created_at?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact-submissions_select".
 */
export interface ContactSubmissionsSelect<T extends boolean = true> {
  name?: T;
  email?: T;
  phone?: T;
  message?: T;
  status?: T;
  created_at?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}